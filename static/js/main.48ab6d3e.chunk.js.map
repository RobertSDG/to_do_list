{"version":3,"sources":["components/ToDoList.tsx","components/AddItem.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ToDoList","items","this","props","length","sortedItems","sortItems","style","width","fontFamily","borderCollapse","textAlign","padding","border","map","i","index","className","task","priority","React","Component","sort","i1","i2","AddItem","state","setTask","bind","setPriority","addItem","evt","setState","target","value","parseInt","item","isValid","id","type","placeholder","onChange","onClick","initialList","App","some","it","isPartOf","concat","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ab6d3e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface Item {\n  task: string;\n  priority: number;\n}\n\n\nconst getTableStyleProps = (): {} => {\n  return {\n    style: {\n      width: \"100%\",\n      fontFamily: \"arial, sans-serif\",\n      borderCollapse: \"collapse\",\n      textAlign: \"left\",\n      padding: \"8px\",\n      border: \" 1px solid #dddddd\",\n    },\n  };\n};\n\n\nclass ToDoList extends React.Component<{ items: Item[] }, {}> {\n  render() {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <div>Empty List</div>;\n    }\n    const sortedItems = sortItems(items);\n    return (\n      <table {...getTableStyleProps()}>\n        <thead>\n          <tr key={`task_prioirity`}>\n            <th>Task</th>\n            <th>Priority</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedItems.map((i, index) => (\n            <tr\n              key={`${i.task}_${i.priority}`}\n            //   style={{ backgroundColor: index % 2 === 0 ? \"#dddddd\" : \"white\" }}\n              className={index % 2 === 0 ? \"table-row\" : \"table-row-alt\"}\n            >\n              <td>{i.task}</td>\n              <td>{i.priority}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst sortItems = (items: Item[]): Item[] => {\n  return items.sort((i1, i2) => i1.priority - i2.priority);\n};\n\nexport default ToDoList;","import React from \"react\";\nimport { Item } from \"./ToDoList\";\n\nconst isValid = (item: Item): boolean => {\n    return item.task !== \"\" && item.priority !== -1;\n  };\n  \n  class AddItem extends React.Component<{ addItem: any }, Item> {\n    constructor(props: any) {\n      super(props);\n      this.state = {\n        task: \"\",\n        priority: -1,\n      };\n      this.setTask = this.setTask.bind(this);\n      this.setPriority = this.setPriority.bind(this);\n      this.addItem = this.addItem.bind(this);\n    }\n  \n    setTask(evt: any) {\n      this.setState({\n        task: evt.target.value,\n      });\n    }\n  \n    setPriority(evt: any) {\n      this.setState({\n        priority: parseInt(evt.target.value),\n      });\n    }\n  \n    addItem(evt: any) {\n      const item = this.state;\n      if (isValid(item)) {\n        this.props.addItem(item);\n      }\n  \n      this.setState({\n        task: \"\",\n        priority: -1,\n      });\n    }\n  \n    render() {\n      return (\n        <table>\n          <tbody>\n            <tr key={\"\"}>\n              <td>Task:</td>\n              <td>\n                <input\n                  id=\"task\"\n                  type=\"text\"\n                  placeholder=\"Enter task here\"\n                  onChange={this.setTask}\n                />\n              </td>\n              <td>Priority:</td>\n              <td>\n                <input\n                  id=\"prioity\"\n                  type=\"text\"\n                  placeholder=\"Enter priority here\"\n                  onChange={this.setPriority}\n                />\n              </td>\n              <td>\n                <input id=\"submit\" type=\"submit\" onClick={this.addItem} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n  }\n  \n  export default AddItem;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport ToDoList, { Item } from \"./components/ToDoList\";\nimport AddItem from './components/AddItem';\nconst initialList = [\n  {\n    task: \"Pick up Milk\",\n    priority: 1,\n  },\n  {\n    task: \"Buy Eggs\",\n    priority: 2,\n  },\n  {\n    task: \"Buy Bread\",\n    priority: 3,\n  },\n];\n\nconst isPartOf = (item: Item, items: Item[]): boolean => {\n  return items.some((it) => it.priority === item.priority);\n};\n\nclass App extends React.Component<{}, { items: Item[] }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      items: initialList,\n    };\n    this.addItem = this.addItem.bind(this);\n  }\n\n  addItem(item: Item) {\n    const { items } = this.state;\n\n    if (isPartOf(item, items)) {\n      alert(`Item with priorirty: ${item.priority} exists`);\n      return;\n    }\n    this.setState({\n      items: items.concat(item),\n    });\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div className=\"App\">\n        <AddItem addItem={this.addItem} />\n        <br />\n        <ToDoList items={items} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}